syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";
import "AnalogConstraints.proto";

package blox.ActuatorPwm;

message ActuatorPwm {
  option (brewblox_msg).objtype = ActuatorPwm;
  option (brewblox_msg).impl = ProcessValueInterface;
  option (brewblox_msg).impl = ActuatorAnalogInterface;

  uint32 actuatorId = 1 [
    (brewblox).objtype = ActuatorDigitalInterface,
    (nanopb).int_size = IS_16
  ];
  uint32 period = 3 [ (brewblox).unit = Second, (brewblox).scale = 1000 ];
  sint32 setting = 4 [
    (brewblox).logged = true,
    (brewblox).readonly = true,
    (brewblox).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 value = 5 [
    (brewblox).logged = true,
    (brewblox).scale = 4096,
    (nanopb).int_size = IS_32,
    (brewblox).readonly = true
  ];
  AnalogConstraints.AnalogConstraints constrainedBy = 6;
  uint32 drivenActuatorId = 7 [
    (brewblox).objtype = ActuatorDigitalInterface,
    (brewblox).driven = true,
    (nanopb).int_size = IS_16,
    (brewblox).readonly = true
  ];
  bool enabled = 8;
  sint32 desiredSetting = 9 [
    (brewblox).logged = true,
    (brewblox).scale = 4096,
    (nanopb).int_size = IS_32
  ];

  repeated uint32 strippedFields = 99 [
    (brewblox).readonly = true,
    (nanopb).int_size = IS_16,
    (nanopb).max_count = 2
  ];
}
