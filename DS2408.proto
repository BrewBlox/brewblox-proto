syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";
import "IoArray.proto";

package blox.DS2408;

enum ChannelId {
  DS2408_CHAN_NONE = 0;
  DS2408_CHAN_A = 1;
  DS2408_CHAN_B = 2;
  DS2408_CHAN_C = 3;
  DS2408_CHAN_D = 4;
  DS2408_CHAN_E = 5;
  DS2408_CHAN_F = 6;
  DS2408_CHAN_G = 7;
  DS2408_CHAN_H = 8;
  DS2408_VALVE_NONE = 0;
  // valves are labeled like this on our valve board
  DS2408_VALVE_A = 5;
  DS2408_VALVE_B = 1;
  option allow_alias = true;
};

enum PinConnectMode {
  CONNECT_VALVE = 0;
  CONNECT_ACTUATOR = 1;
}

message Block {
  option (brewblox_msg).objtype = DS2408;
  option (brewblox_msg).impl = IoArrayInterface;
  option (brewblox_msg).impl = DS2408Interface;
  option (brewblox_msg).impl = OneWireDeviceInterface;

  fixed64 address = 1 [ (brewblox).hexed = true ];
  bool connected = 6 [ (brewblox).readonly = true ];

  PinConnectMode connectMode = 9;
  uint32 oneWireBusId = 10 [
    (brewblox).objtype = OneWireBus,
    (nanopb).int_size = IS_16,
    (brewblox).readonly = true
  ];

  // if connectMode is valve, the channels are [1,5]. Each valve uses 4 pins
  // if connectMode is actuator, the channels are [1,2,3,4,5,6,7,8]
  repeated IoArray.IoChannel channels = 11
      [ (nanopb).max_count = 8, (brewblox).readonly = true ];

  // "pins" was renamed to "channels".
  // Keep an explicitly ignored field around to avoid import errors
  bool pins = 90 [ (brewblox).ignored = true, (nanopb).type = FT_IGNORE ];
}
