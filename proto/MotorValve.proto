syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";
import "Constraints.proto";
import "IoArray.proto";
import "Claims.proto";

package blox.MotorValve;

enum ValveState {
  VALVE_UNKNOWN = 0;
  VALVE_OPEN = 1;
  VALVE_CLOSED = 2;
  VALVE_OPENING = 3;
  VALVE_CLOSING = 4;
  VALVE_HALF_OPEN_IDLE = 5;
  VALVE_INIT_IDLE = 6;
}

message Block {
  option (brewblox.msg).objtype = MotorValve;
  option (brewblox.msg).impl = ActuatorDigitalInterface;
  option (brewblox.msg).impl = StoredDigitalInterface;
  option (brewblox.msg).impl = ClaimableInterface;
  option (brewblox.msg).impl = IoDriverInterface;

  uint32 hwDevice = 1
      [ (brewblox.field).objtype = DS2408Interface, (nanopb).int_size = IS_16 ];
  uint32 channel = 2 [ (nanopb).int_size = IS_8 ];

  IoArray.DigitalState storedState = 9 [ (brewblox.field).logged = true ];
  IoArray.DigitalState desiredState = 7
      [ (brewblox.field).logged = true, (brewblox.field).readonly = true ];
  IoArray.DigitalState state = 3
      [ (brewblox.field).logged = true, (brewblox.field).readonly = true ];
  ValveState valveState = 6
      [ (brewblox.field).logged = true, (brewblox.field).readonly = true ];

  Constraints.DeprecatedDigitalConstraints constrainedBy = 5;
  Constraints.DigitalConstraints constraints = 11;

  uint32 claimedBy = 8 [
    (brewblox.field).objtype = Any,
    (brewblox.field).readonly = true,
    (nanopb).int_size = IS_16
  ];
  Claims.SettingMode settingMode = 10;

  // Deprecated fields
  bool startChannel = 90
      [ (brewblox.field).ignored = true, (nanopb).type = FT_IGNORE ];
}
