syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";
import "Constraints.proto";

package blox.ActuatorOffset;

enum ReferenceKind {
  REF_SETTING = 0;
  REF_VALUE = 1;
}

message Block {
  option (brewblox.msg).objtype = ActuatorOffset;
  option (brewblox.msg).impl = ActuatorAnalogInterface;
  option (brewblox.msg).impl = EnablerInterface;
  option (brewblox.msg).impl = ClaimableInterface;

  bool enabled = 10;

  uint32 targetId = 1 [
    (brewblox.field).objtype = ProcessValueInterface,
    (nanopb).int_size = IS_16
  ];
  uint32 referenceId = 3 [
    (brewblox.field).objtype = ProcessValueInterface,
    (nanopb).int_size = IS_16
  ];

  sint32 storedSetting = 13 [
    (brewblox.field).logged = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 desiredSetting = 11 [
    (brewblox.field).logged = true,
    (brewblox.field).readonly = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 setting = 6 [
    (brewblox.field).logged = true,
    (brewblox.field).readonly = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 value = 7 [
    (brewblox.field).logged = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32,
    (brewblox.field).readonly = true
  ];

  ReferenceKind referenceSettingOrValue = 4;
  Constraints.AnalogConstraints constrainedBy = 8;

  uint32 claimedBy = 12 [
    (brewblox.field).objtype = Any,
    (brewblox.field).readonly = true,
    (nanopb).int_size = IS_16
  ];

  // Deprecated field
  bool drivenTargetId = 90
      [ (brewblox.field).ignored = true, (nanopb).type = FT_IGNORE ];
}
