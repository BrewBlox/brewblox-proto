syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";
import "Constraints.proto";
import "Claims.proto";

package blox.ActuatorAnalogMock;

message Block {
  option (brewblox.msg).objtype = ActuatorAnalogMock;
  option (brewblox.msg).impl = ProcessValueInterface;
  option (brewblox.msg).impl = ActuatorAnalogInterface;
  option (brewblox.msg).impl = StoredAnalogInterface;
  option (brewblox.msg).impl = EnablerInterface;
  option (brewblox.msg).impl = ClaimableInterface;

  bool enabled = 13;

  sint32 storedSetting = 11 [
    (brewblox.field).logged = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 desiredSetting = 9 [
    (brewblox.field).logged = true,
    (brewblox.field).readonly = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 setting = 1 [
    (brewblox.field).logged = true,
    (brewblox.field).readonly = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];
  sint32 value = 2 [
    (brewblox.field).logged = true,
    (brewblox.field).readonly = true,
    (brewblox.field).scale = 4096,
    (nanopb).int_size = IS_32
  ];

  sint32 minSetting = 4
      [ (brewblox.field).scale = 4096, (nanopb).int_size = IS_32 ];
  sint32 maxSetting = 5
      [ (brewblox.field).scale = 4096, (nanopb).int_size = IS_32 ];
  sint32 minValue = 6
      [ (brewblox.field).scale = 4096, (nanopb).int_size = IS_32 ];
  sint32 maxValue = 7
      [ (brewblox.field).scale = 4096, (nanopb).int_size = IS_32 ];

  Constraints.DeprecatedAnalogConstraints constrainedBy = 8;
  Constraints.AnalogConstraints constraints = 14;

  uint32 claimedBy = 10 [
    (brewblox.field).objtype = Any,
    (brewblox.field).readonly = true,
    (nanopb).int_size = IS_16
  ];
  Claims.SettingMode settingMode = 12;
}
