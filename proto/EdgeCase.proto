syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";

package blox.EdgeCase;

message Settings {
  fixed64 address = 1 [ (brewblox.field).hexed = true ];
  sint32 offset = 2
      [ (brewblox.field).unit = DeltaCelsius, (brewblox.field).scale = 256 ];
}

message State {
  sint32 value = 1
      [ (brewblox.field).unit = Celsius, (brewblox.field).scale = 256 ];
  bool connected = 2 [ (brewblox.field).readonly = true ];
}

message NestedLink {
  uint32 connection = 1 [ (brewblox.field).objtype = TempSensorInterface ];
}

// This message allows testing combinations that are possible, but not likely in
// real protobuf messages.
message Block {
  Settings settings = 1;
  State state = 2;
  uint32 link = 3 [ (brewblox.field).objtype = ActuatorAnalogInterface ];
  repeated NestedLink additionalLinks = 4;
  repeated sint32 listValues = 5 [
    (brewblox.field).unit = Celsius,
    (brewblox.field).scale = 256,
    (brewblox.field).omit_if_zero = true
  ];
  uint32 deltaV = 6 [
    (brewblox.field).unit = DeltaCelsiusPerSecond,
    (brewblox.field).scale = 256,
    (brewblox.field).null_if_zero = true
  ];
  uint32 logged = 7
      [ (brewblox.field).logged = true, (brewblox.field).omit_if_zero = true ];
  uint32 unLogged = 8;
  uint32 ip = 10
      [ (brewblox.field).ipv4address = true, (nanopb).int_size = IS_32 ];
}

message SubCase {
  option (brewblox.msg).subtype = 1;

  uint32 subvalue = 1;
}
