instructions:
  - name: RESTART
    desc: >
      When this instruction is executed, the <i>Sequence</i> jumps back to the first instruction.
      Any instructions after the <code>RESTART</code> will not be executed.
    example:
      - RESTART

  - name: ENABLE
    desc: Sets the <code>enabled</code> field for given block to <code>true</code>.
    arguments:
      - name: target
        desc: block ID
        type: EnablerInterface
    errors:
      - INVALID_TARGET
    example:
      - "ENABLE target='Fridge Setting'"

  - name: DISABLE
    desc: Sets the <code>enabled</code> field for the given block to <code>false</code>.
    arguments:
      - name: target
        desc: block ID
        type: EnablerInterface
    errors:
      - INVALID_TARGET
    example:
      - "DISABLE target='Fridge Setting'"

  - name: WAIT_DURATION
    desc: >
      Waits until a given duration has elapsed since the instruction was started.
      If the *Sequence* is disabled while this instruction is active, time spent disabled is **not** included.
      If the controller is shut down while this instruction is active, time spent shut down is included.
    arguments:
      - name: duration
        desc: duration
        type: Duration string or integer seconds
    example:
      - 'WAIT_DURATION duration=1h10m5s'

  - name: WAIT_UNTIL
    desc: Waits until current time is later than <code>time</code> argument.
    arguments:
      - name: time
        desc: timestamp
        type: ISO-8601 string
    example:
      - 'WAIT_UNTIL time=2022-07-25T18:13:50Z'

  - name: WAIT_TEMP_BETWEEN
    desc: Waits until the measured value of target temperature sensor is inside a temperature range.
    arguments:
      - name: target
        desc: block ID
        type: TempSensorInterface
      - name: lower
        desc: target value must be above this temperature
        type: Temperature
      - name: upper
        desc: target value must be below this temperature
        type: Temperature
    errors:
      - INVALID_TARGET
      - INACTIVE_TARGET
    example:
      - "WAIT_TEMP_BETWEEN target='Fridge Sensor', lower=1C, upper=5C"

  - name: WAIT_TEMP_NOT_BETWEEN
    desc: >
      Waits until the measured value of target temperature sensor is outside a temperature range.
      The sensor must be connected and readable for this instruction to finish.
    arguments:
      - name: target
        desc: block ID
        type: TempSensorInterface
      - name: lower
        desc: target value must be below this temperature
        type: Temperature
      - name: upper
        desc: target value must be above this temperature
        type: Temperature
    errors:
      - INVALID_TARGET
      - INACTIVE_TARGET
    example:
      - "WAIT_TEMP_NOT_BETWEEN target='Fridge Sensor', lower=1C, upper=5C"

  - name: WAIT_TEMP_UNEXPECTED
    desc: >
      Waits until the measured value of target temperature sensor is unreadable or outside a temperature range.
      Compared to <code>WAIT_TEMP_NOT_BETWEEN</code>, this condition is more suitable for alerts,
      as it will not cause an error state if the sensor is disconnected.
    arguments:
      - name: target
        desc: block ID
        type: TempSensorInterface
      - name: lower
        desc: target value must be below this temperature
        type: Temperature
      - name: upper
        desc: target value must be above this temperature
        type: Temperature
    errors:
      - INVALID_TARGET
    example:
      - "WAIT_TEMP_UNEXPECTED target='Fridge Sensor', lower=1C, upper=5C"

  - name: WAIT_TEMP_ABOVE
    desc: >
      Waits until the measured value of target temperature sensor is above a given value.
      The sensor must be connected and readable for this instruction to finish.
    arguments:
      - name: target
        desc: block ID
        type: TempSensorInterface
      - name: value
        desc: target value must be above this temperature
        type: Temperature
    errors:
      - INVALID_TARGET
      - INACTIVE_TARGET
    example:
      - "WAIT_TEMP_ABOVE target='Fridge Sensor', value=1C"

  - name: WAIT_TEMP_BELOW
    desc: >
      Waits until the measured value of target temperature sensor is below a given value.
      The sensor must be connected and readable for this instruction to finish.
    arguments:
      - name: target
        desc: block ID
        type: TempSensorInterface
      - name: value
        desc: target value must be below this temperature
        type: Temperature
    errors:
      - INVALID_TARGET
      - INACTIVE_TARGET
    example:
      - "WAIT_TEMP_BELOW target='Fridge Sensor', value=5C"

  - name: SET_SETPOINT
    desc: Sets the desired setting of a <i>Setpoint</i> block.
    arguments:
      - name: target
        desc: block ID
        type: SetpointSensorPair
      - name: setting
        desc: new desired setting for target block
        type: Temperature
    errors:
      - INVALID_TARGET
    example:
      - "SET_SETPOINT target='Fridge Setting', setting=40F"

  - name: WAIT_SETPOINT
    desc: >
      Waits until the measured value of a *Setpoint* block is close enough to its desired setting.
      The <code>precision</code> argument is not centered on the desired setting:
      the instruction will finish if either <code>value >= setting - precision</code>
      or <code>value <= setting + precision</code> is true.
    arguments:
      - name: target
        desc: block ID
        type: SetpointSensorPair
      - name: precision
        desc: Acceptable delta between setpoint setting and value
        type: Delta Temperature
    errors:
      - INVALID_TARGET
      - DISABLED_TARGET
      - INACTIVE_TARGET
    example:
      - "WAIT_SETPOINT target='Fridge Setting', precision=0.1dC"

  - name: SET_DIGITAL
    desc: Sets the desired setting of target Digital Actuator.
    arguments:
      - name: target
        desc: block ID
        type: DigitalActuator
      - name: setting
        desc: desired state
        type: STATE_INACTIVE | STATE_ACTIVE
    errors:
      - INVALID_TARGET
    example:
      - "SET_DIGITAL target='Cool Actuator', setting=STATE_ACTIVE"

  - name: WAIT_DIGITAL
    desc: Waits until the achieved value of target Digital Actuator matches its desired setting.
    arguments:
      - name: target
        desc: block ID
        type: DigitalActuator
    errors:
      - INVALID_TARGET
    example:
      - "WAIT_DIGITAL target='Cool Actuator'"

  - name: SET_PWM
    desc: Sets the desired setting of target PWM block.
    arguments:
      - name: target
        desc: block ID
        type: ActuatorPwm
      - name: setting
        desc: desired setting percentage
        type: Number 0-100
    errors:
      - INVALID_TARGET
    example:
      - "SET_PWM target='Cool PWM', setting=50"

  - name: START_PROFILE
    desc: >-
      (Re)starts a target Setpoint Profile block by setting its <code>start</code> field
      to the date and time at which this instruction is executed.
      The target block <code>enabled</code> state is not changed.
      To start a disabled Profile, the <code>ENABLE</code>
      and <code>START_PROFILE</code> instructions should be used in combination.
    arguments:
      - name: target
        desc: block ID
        type: SetpointProfile
    errors:
      - INVALID_TARGET
    example:
      - "START_PROFILE target='Fridge Profile'"
      - "ENABLE target='Fridge Profile'"

  - name: WAIT_PROFILE
    desc: Waits until the last point is reached in target Setpoint Profile block.
    arguments:
      - name: target
        desc: block ID
        type: SetpointProfile
    errors:
      - INVALID_TARGET
      - DISABLED_TARGET
    example:
      - "WAIT_PROFILE target='Fridge Profile'"

  - name: START_SEQUENCE
    desc: >-
      (Re)starts a target Sequence block by setting its <code>activeInstruction</code> field to 0.
      The target block <code>enabled</code> state is not changed. To start a disabled Sequence,
      the `ENABLE` and <code>START_SEQUENCE</code> instructions should be used in combination.
    arguments:
      - name: target
        desc: block ID
        type: Sequence
    errors:
      - INVALID_TARGET
    example:
      - "START_SEQUENCE target='Mash Sequence'"
      - "ENABLE target='Mash Sequence'"

  - name: WAIT_SEQUENCE
    desc: >-
      Waits until the target Sequence has reached the <code>END</code> state.
      A Sequence that includes a <code>RESTART</code> instruction will never reach an <code>END</code> state.
    arguments:
      - name: target
        desc: block ID
        type: Sequence
    errors:
      - INVALID_TARGET
      - DISABLED_TARGET
    example:
      - "WAIT_SEQUENCE target='Mash Sequence'"
