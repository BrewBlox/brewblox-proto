syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";

package blox.EdgeCase;

message Settings {
  fixed64 address = 1 [ (brewblox).hexed = true ];
  sint32 offset = 2 [ (brewblox).unit = DeltaCelsius, (brewblox).scale = 256 ];
}

message State {
  sint32 value = 1 [ (brewblox).unit = Celsius, (brewblox).scale = 256 ];
  bool connected = 2 [ (brewblox).readonly = true ];
}

message NestedLink {
  uint32 connection = 1 [ (brewblox).objtype = TempSensorInterface ];
}

// This message allows testing combinations that are possible, but not likely in
// real protobuf messages.
message Block {
  Settings settings = 1;
  State state = 2;
  uint32 link = 3 [ (brewblox).objtype = ActuatorAnalogInterface ];
  repeated NestedLink additionalLinks = 4;
  repeated float listValues = 5
      [ (brewblox).unit = Celsius, (brewblox).scale = 256 ];
  uint32 deltaV = 6
      [ (brewblox).unit = DeltaCelsiusPerSecond, (brewblox).scale = 256 ];
  uint32 logged = 7 [ (brewblox).logged = true ];
  uint32 unLogged = 8;
  uint32 drivenDevice = 9 [
    (brewblox).objtype = DS2413,
    (brewblox).driven = true,
    (nanopb).int_size = IS_16
  ];
  repeated uint32 strippedFields = 99 [
    (brewblox).readonly = true,
    (nanopb).int_size = IS_16,
    (nanopb).max_count = 2
  ];
}

message SubCase {
  option (brewblox_msg).subtype = 1;

  uint32 subvalue = 1;
}
