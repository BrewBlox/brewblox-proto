syntax = "proto3";

import "brewblox.proto";
import "nanopb.proto";

package blox;

message Trace {
  enum Action {
    NONE = 0;
    READ_BLOCK = 1;
    WRITE_BLOCK = 2;
    PERSIST_BLOCK = 3;
    UPDATE_BLOCK = 4;
    CREATE_BLOCK = 5;
    DELETE_BLOCK = 6;
    UPDATE_DISPLAY = 10;
    UPDATE_CONNECTIONS = 11;
    UPDATE_BLOCKS = 12;
    SYSTEM_TASKS = 13;
  }
  Action action = 1;
  uint32 id = 2 [ (nanopb).int_size = IS_16 ];
  uint32 type = 3 [ (nanopb).int_size = IS_16 ];
}

message SysInfo {
  option (brewblox_msg).objtype = SysInfo;

  enum Platform {
    PLATFORM_UNKNOWN = 0;
    PLATFORM_GCC = 3;
    PLATFORM_PHOTON = 6;
    PLATFORM_P1 = 8;
  }

  enum SysInfoCommand {
    SYS_CMD_NONE = 0;
    SYS_CMD_TRACE_READ = 1;
    SYS_CMD_TRACE_RESUME = 2;
    SYS_CMD_TRACE_READ_RESUME = 3;
  }

  bytes deviceId = 1 [
    (brewblox).readonly = true,
    (nanopb).max_size = 12,
    (nanopb).fixed_length = true,
    (brewblox).hexstr = true
  ];
  string version = 2 [ (brewblox).readonly = true, (nanopb).max_size = 12 ];
  Platform platform = 3 [ (brewblox).readonly = true ];

  string protocolVersion = 7
      [ (brewblox).readonly = true, (nanopb).max_size = 12 ];
  string releaseDate = 8 [ (brewblox).readonly = true, (nanopb).max_size = 12 ];
  string protocolDate = 9
      [ (brewblox).readonly = true, (nanopb).max_size = 12 ];

  SysInfoCommand command = 10;
  repeated Trace trace = 11
      [ (brewblox).readonly = true, (nanopb).max_count = 10 ];
}
